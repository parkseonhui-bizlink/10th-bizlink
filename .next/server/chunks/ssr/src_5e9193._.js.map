{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ps/Desktop/work/corporate10/src/app/components/MV.tsx"],"sourcesContent":["import React from 'react'\nimport '@/styles/mv.css'\n\nconst MV = () => {\n  return <section className=\"mv\">MV</section>\n}\n\nexport default MV\n"],"names":[],"mappings":";;;;;;AAGA,MAAM,KAAK;IACT,qBAAO,8OAAC;QAAQ,WAAU;kBAAK;;;;;;AACjC;uCAEe"}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/styles/progress/progress.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"bottomText\": \"progress-module__uNuYtW__bottomText\",\n  \"imgarea\": \"progress-module__uNuYtW__imgarea\",\n  \"imgareaText\": \"progress-module__uNuYtW__imgareaText\",\n  \"progress\": \"progress-module__uNuYtW__progress\",\n  \"progressArea\": \"progress-module__uNuYtW__progressArea\",\n  \"progressBox\": \"progress-module__uNuYtW__progressBox\",\n  \"progressBuilding\": \"progress-module__uNuYtW__progressBuilding\",\n  \"progressYear\": \"progress-module__uNuYtW__progressYear\",\n  \"progressbar\": \"progress-module__uNuYtW__progressbar\",\n  \"textarea\": \"progress-module__uNuYtW__textarea\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///Users/ps/Desktop/work/corporate10/src/app/components/progress/Progress.tsx"],"sourcesContent":["'use client'\nimport React, { useEffect, useRef, forwardRef } from 'react'\nimport styles from '@/styles/progress/progress.module.css'\nimport Image from 'next/image'\nimport gsap from 'gsap'\n\nconst Progress = forwardRef<HTMLDivElement, { activeIndex: number }>(\n  ({ activeIndex }, ref) => {\n    const progressBoxRef = useRef<HTMLDivElement | null>(null)\n\n    // 연도, 텍스트, 이미지 데이터\n    const years = ['2015.4-2016.8', '2016.8-2017.3', '2017.3-2018.10']\n    const titles = [\n      '帝都渋谷ビル',\n      '金谷ホテルマンション',\n      'エグゼクティブタワー',\n    ]\n    const subtitles = ['間借り5坪', '間借り10坪', '間借り30坪']\n    const images = [\n      '/images/section/progressSection/progress01.png',\n      '/images/section/progressSection/progress02.png',\n      '/images/section/progressSection/progress03.png',\n    ]\n\n    useEffect(() => {\n      if (!progressBoxRef.current) return\n\n      const yearText = progressBoxRef.current.querySelector('.progressYear p')\n      const buildingText = progressBoxRef.current.querySelector(\n        '.progressBuilding p:first-child'\n      )\n      const subtitleText = progressBoxRef.current.querySelector(\n        '.progressBuilding p:last-child'\n      )\n      const image = progressBoxRef.current.querySelector('.imgarea img')\n\n      if (yearText && buildingText && subtitleText && image) {\n        // 연도 변경 애니메이션\n        gsap.to(yearText, {\n          opacity: 0,\n          y: -20,\n          duration: 0.3,\n          onComplete: () => {\n            yearText.textContent = years[activeIndex]\n            gsap.to(yearText, { opacity: 1, y: 0, duration: 0.3 })\n          },\n        })\n\n        // 건물 이름 변경 애니메이션\n        gsap.to(buildingText, {\n          opacity: 0,\n          y: -20,\n          duration: 0.3,\n          onComplete: () => {\n            buildingText.textContent = titles[activeIndex]\n            gsap.to(buildingText, { opacity: 1, y: 0, duration: 0.3 })\n          },\n        })\n\n        // 서브텍스트 변경 애니메이션\n        gsap.to(subtitleText, {\n          opacity: 0,\n          y: -20,\n          duration: 0.3,\n          onComplete: () => {\n            subtitleText.textContent = subtitles[activeIndex]\n            gsap.to(subtitleText, { opacity: 1, y: 0, duration: 0.3 })\n          },\n        })\n\n        // 이미지 변경 애니메이션\n        gsap.to(image, {\n          opacity: 0,\n          scale: 0.95,\n          duration: 0.3,\n          onComplete: () => {\n            image.setAttribute('src', images[activeIndex])\n            gsap.to(image, { opacity: 1, scale: 1, duration: 0.3 })\n          },\n        })\n      }\n    }, [activeIndex])\n\n    return (\n      <section className=\"sec progress\" ref={ref}>\n        <section className=\"secInner\">\n          <div className=\"titleArea\">\n            <Image\n              src=\"/images/section/PROGRESS.svg\"\n              width={693}\n              height={158}\n              alt=\"PROGRESS\"\n            />\n            <h2 className=\"secTitle\">これまでの軌跡</h2>\n          </div>\n          <section className={styles.progressArea}>\n            <article\n              className={`progressBox ${styles.progressBox}`}\n              ref={progressBoxRef}\n            >\n              <div className={styles.textarea}>\n                <div className={styles.progressYear}>\n                  <p className=\"bunyan-bold\">{years[0]}</p>\n                </div>\n                <div className={styles.progressBuilding}>\n                  <p>{titles[0]}</p>\n                  <p>{subtitles[0]}</p>\n                </div>\n              </div>\n              <div className={styles.progressbar}></div>\n              <div className={styles.imgarea}>\n                <figure>\n                  <Image\n                    src={images[0]}\n                    width={296}\n                    height={368}\n                    alt={titles[0]}\n                  />\n                </figure>\n                <div className={styles.imgareaText}>\n                  <span className=\"bunyan-regular\">{titles[0]}</span>\n                  <span></span>\n                  <span className=\"bunyan-regular\">01</span>\n                </div>\n              </div>\n            </article>\n          </section>\n        </section>\n      </section>\n    )\n  }\n)\n\nexport default Progress\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 329, "column": 0}, "map": {"version":3,"sources":["file:///Users/ps/Desktop/work/corporate10/src/app/Top.tsx"],"sourcesContent":["'use client'\nimport React, { useEffect, useRef, useState } from 'react'\nimport MV from './components/MV'\nimport History from './components/history/History'\nimport Progress from './components/progress/Progress'\n\nimport gsap from 'gsap'\nimport { ScrollTrigger } from 'gsap/ScrollTrigger'\n\ngsap.registerPlugin(ScrollTrigger)\n\nconst Top = () => {\n  const historyRef = useRef<HTMLDivElement | null>(null)\n  const progressRef = useRef<HTMLDivElement | null>(null)\n\n  const [activeIndex, setActiveIndex] = useState(0)\n\n  useEffect(() => {\n    if (typeof window === 'undefined') return\n\n    let ctx = gsap.context(() => {\n      const historyContainer = historyRef.current\n      const progressContainer = progressRef.current\n\n      if (historyContainer) {\n        let sections = Array.from(\n          historyContainer.querySelectorAll('.panel')\n        ) as HTMLElement[]\n\n        let totalWidth = sections.reduce(\n          (acc, section) => acc + section.getBoundingClientRect().width,\n          0\n        )\n        historyContainer.style.width = `${totalWidth}px`\n\n        gsap.to(historyContainer, {\n          x: () => -(totalWidth - window.innerWidth),\n          ease: 'none',\n          scrollTrigger: {\n            trigger: historyContainer,\n            pin: true,\n            scrub: 1,\n            snap: {\n              snapTo: (progress) => {\n                let sectionOffsets = sections.map(\n                  (s) => s.offsetLeft / totalWidth\n                )\n                return gsap.utils.snap(sectionOffsets, progress)\n              },\n              duration: 0.5,\n            },\n            end: () => `+=${totalWidth - window.innerWidth}`,\n          },\n        })\n      }\n\n      if (progressContainer) {\n        gsap.to(\n          {},\n          {\n            scrollTrigger: {\n              trigger: progressContainer,\n              start: 'top top',\n              end: 'bottom bottom',\n              scrub: 1,\n              pin: true,\n              onUpdate: (self) => {\n                const progress = self.progress\n                const newIndex = Math.floor(progress * 2) // 0, 1, 2 (총 3개 변화)\n                setActiveIndex(newIndex)\n              },\n            },\n          }\n        )\n      }\n      setTimeout(() => {\n        ScrollTrigger.refresh()\n      }, 500)\n    }, historyRef)\n\n    return () => ctx.revert()\n  }, [])\n\n  return (\n    <section>\n      <MV />\n      {/* <History ref={historyRef} /> */}\n      <Progress ref={progressRef} activeIndex={activeIndex} />\n    </section>\n  )\n}\n\nexport default Top\n"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AAEA;AACA;AAPA;;;;;;;AASA,6IAAA,CAAA,UAAI,CAAC,cAAc,CAAC,qIAAA,CAAA,gBAAa;AAEjC,MAAM,MAAM;IACV,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAyB;IACjD,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAyB;IAElD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,wCAAmC;;QAEnC,IAAI;IA6DN,GAAG,EAAE;IAEL,qBACE,8OAAC;;0BACC,8OAAC,+HAAA,CAAA,UAAE;;;;;0BAEH,8OAAC,iJAAA,CAAA,UAAQ;gBAAC,KAAK;gBAAa,aAAa;;;;;;;;;;;;AAG/C;uCAEe"}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}