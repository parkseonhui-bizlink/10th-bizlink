{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ps/Desktop/work/corporate10/src/app/components/fv/FV.tsx"],"sourcesContent":["'use client'\nimport '@/styles/fv/fv.css'\nimport { useEffect, useRef, useState } from 'react'\nimport { gsap } from 'gsap'\n\nconst FV = () => {\n  const containerRef = useRef<HTMLDivElement | null>(null)\n  const [itemCount, setItemCount] = useState(16)\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth <= 768) {\n        setItemCount(12)\n      } else {\n        setItemCount(16)\n      }\n    }\n\n    handleResize()\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  useEffect(() => {\n    const container = containerRef.current\n    if (!container) return\n\n    const items = Array.from(container.querySelectorAll('.gridItem'))\n\n    const shuffled = items.sort(() => Math.random() - 0.5)\n\n    shuffled.forEach((item, i) => {\n      gsap.to(item, {\n        opacity: 1,\n        delay: i * 0.1,\n        duration: 0.4,\n        ease: 'power2.out',\n      })\n    })\n  }, [itemCount])\n\n  return (\n    <section className=\"fv\">\n      <div ref={containerRef} className=\"gridContainer\">\n        {Array.from({ length: itemCount }).map((_, index) => (\n          <div key={index} className=\"gridItem\">\n            <img\n              src={`/images/section/FVSection/fv${index + 1}.jpg`}\n              alt=\"image\"\n            />\n          </div>\n        ))}\n      </div>\n    </section>\n  )\n}\n\nexport default FV\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;;AAKA,MAAM,KAAK;IACT,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAyB;IACnD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,eAAe;YACnB,IAAI,OAAO,UAAU,IAAI,KAAK;gBAC5B,aAAa;YACf,OAAO;gBACL,aAAa;YACf;QACF;QAEA;QACA,OAAO,gBAAgB,CAAC,UAAU;QAClC,OAAO,IAAM,OAAO,mBAAmB,CAAC,UAAU;IACpD,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY,aAAa,OAAO;QACtC,IAAI,CAAC,WAAW;QAEhB,MAAM,QAAQ,MAAM,IAAI,CAAC,UAAU,gBAAgB,CAAC;QAEpD,MAAM,WAAW,MAAM,IAAI,CAAC,IAAM,KAAK,MAAM,KAAK;QAElD,SAAS,OAAO,CAAC,CAAC,MAAM;YACtB,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,MAAM;gBACZ,SAAS;gBACT,OAAO,IAAI;gBACX,UAAU;gBACV,MAAM;YACR;QACF;IACF,GAAG;QAAC;KAAU;IAEd,qBACE,8OAAC;QAAQ,WAAU;kBACjB,cAAA,8OAAC;YAAI,KAAK;YAAc,WAAU;sBAC/B,MAAM,IAAI,CAAC;gBAAE,QAAQ;YAAU,GAAG,GAAG,CAAC,CAAC,GAAG,sBACzC,8OAAC;oBAAgB,WAAU;8BACzB,cAAA,8OAAC;wBACC,KAAK,CAAC,4BAA4B,EAAE,QAAQ,EAAE,IAAI,CAAC;wBACnD,KAAI;;;;;;mBAHE;;;;;;;;;;;;;;;AAUpB;uCAEe"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/styles/message/message.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"gradientBg\": \"message-module__-1n1CW__gradientBg\",\n  \"gradientBottom\": \"message-module__-1n1CW__gradientBottom\",\n  \"gradientBttom\": \"message-module__-1n1CW__gradientBttom\",\n  \"gradientTop\": \"message-module__-1n1CW__gradientTop\",\n  \"message\": \"message-module__-1n1CW__message\",\n  \"messageBox\": \"message-module__-1n1CW__messageBox\",\n  \"num\": \"message-module__-1n1CW__num\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///Users/ps/Desktop/work/corporate10/src/app/components/message/Message.tsx"],"sourcesContent":["'use client'\n\nimport React, { useEffect, useRef } from 'react'\nimport Image from 'next/image'\nimport gsap from 'gsap'\nimport { ScrollTrigger } from 'gsap/ScrollTrigger'\nimport styles from '@/styles/message/message.module.css'\n\ngsap.registerPlugin(ScrollTrigger)\n\nconst Message = () => {\n  const messageRef = useRef(null)\n  const sinceRef = useRef(null)\n  const numRef = useRef(null)\n  const titleRef = useRef(null)\n  const topGradientRef = useRef(null)\n  const bottomGradientRef = useRef(null)\n\n  useEffect(() => {\n    gsap.to(messageRef.current, {\n      backgroundPosition: '50% 20%', // 스크롤 내리면 배경이 아래로 이동\n      ease: 'power1.out',\n      scrollTrigger: {\n        trigger: messageRef.current,\n        start: 'top top',\n        end: 'bottom bottom',\n        scrub: 1, // 부드럽게 이동\n      },\n    })\n    gsap.fromTo(\n      sinceRef.current,\n      { opacity: 0, y: 50 },\n      {\n        opacity: 1,\n        y: 0,\n        duration: 1.2,\n        ease: 'power2.out',\n        scrollTrigger: {\n          trigger: sinceRef.current,\n          start: 'top 80%',\n          toggleActions: 'play none none reverse',\n        },\n      }\n    )\n\n    gsap.fromTo(\n      numRef.current,\n      { opacity: 0, y: 80 },\n      {\n        opacity: 1,\n        y: 0,\n        duration: 1.5,\n        ease: 'power2.out',\n        scrollTrigger: {\n          trigger: numRef.current,\n          start: 'top 80%',\n          toggleActions: 'play none none reverse',\n        },\n      }\n    )\n\n    gsap.fromTo(\n      titleRef.current,\n      { opacity: 0, y: 50 },\n      {\n        opacity: 1,\n        y: 0,\n        duration: 1.5,\n        ease: 'power2.out',\n        delay: 0.3,\n        scrollTrigger: {\n          trigger: titleRef.current,\n          start: 'top 75%',\n          toggleActions: 'play none none reverse',\n        },\n      }\n    )\n    gsap.to(topGradientRef.current, {\n      y: 100, // 위쪽 그라데이션이 아래로 이동\n      ease: 'power1.out',\n      scrollTrigger: {\n        trigger: topGradientRef.current,\n        start: 'top top',\n        end: 'bottom top',\n        scrub: 1.5,\n      },\n    })\n\n    gsap.to(bottomGradientRef.current, {\n      y: -100, // 아래쪽 그라데이션이 위로 이동\n      ease: 'power1.out',\n      scrollTrigger: {\n        trigger: bottomGradientRef.current,\n        start: 'top top',\n        end: 'bottom top',\n        scrub: 1.5,\n      },\n    })\n  }, [])\n\n  return (\n    <section ref={messageRef} className={`sec message ${styles.message}`}>\n      <div\n        ref={topGradientRef}\n        className={`${styles.gradientBg} ${styles.gradientTop}`}\n      />\n      <div\n        ref={bottomGradientRef}\n        className={`${styles.gradientBg} ${styles.gradientBttom}`}\n      />\n      <section className=\"secInner\">\n        <div className=\"titleArea\">\n          <span ref={sinceRef}>since</span>\n          <div className={`secTitleNum ${styles.num}`}>\n            <p ref={numRef}>2015</p>\n          </div>\n          <h2 ref={titleRef} className=\"secTitle\">\n            10年間本当に有難うございました。\n          </h2>\n        </div>\n        <div className={styles.messageBox}>\n          <p ref={titleRef}>\n            皆さまの夢と共に、未来へ。\n            <br />\n            私たちの始まりは、間借り5坪の小さなオフィスでした。\n            <br />\n            そこから10年――。\n            <br />\n            日本初のIT人材プラットフォーム企業として、\n            <br />\n            独自性ある技術を磨きながら刻んできた年月。\n            <br />\n            それは、夢を追い続けた歴史でもあります。\n            <br />\n            10周年という節目を迎えた今。\n            <br />\n            積み重ねてきた歴史と誇りを胸に、これからも、\n            <br />\n            ビズリンクに関わる全ての方と一緒にたくさんの夢をかなえていきたい。\n          </p>\n        </div>\n      </section>\n    </section>\n  )\n}\n\nexport default Message\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 343, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 349, "column": 0}, "map": {"version":3,"sources":["file:///Users/ps/Desktop/work/corporate10/src/app/Top.tsx"],"sourcesContent":["'use client'\nimport React, { useEffect, useRef, useState } from 'react'\nimport FV from './components/fv/FV'\nimport History from './components/history/History'\nimport Progress from './components/progress/Progress'\nimport Numbers from './components/numbers/Numbers'\nimport FromTheCeo from './components/fromtheceo/FromTheCeo'\nimport Message from './components/message/Message'\n\nimport gsap from 'gsap'\nimport { ScrollTrigger } from 'gsap/ScrollTrigger'\n\ngsap.registerPlugin(ScrollTrigger)\n\nconst Top = () => {\n  const historyRef = useRef<HTMLDivElement | null>(null)\n  const progressRef = useRef<HTMLDivElement | null>(null)\n  const numbersRef = useRef<HTMLDivElement | null>(null)\n\n  const [activeIndex, setActiveIndex] = useState(0)\n  const totalSteps = 8\n\n  useEffect(() => {\n    if (typeof window === 'undefined') return\n\n    let ctx = gsap.context(() => {\n      const historyContainer = historyRef.current\n      if (historyContainer) {\n        let sections = Array.from(\n          historyContainer.querySelectorAll('.panel')\n        ) as HTMLElement[]\n\n        let totalWidth = sections.reduce(\n          (acc, section) => acc + section.getBoundingClientRect().width,\n          0\n        )\n        historyContainer.style.width = `${totalWidth}px`\n\n        gsap.to(historyContainer, {\n          x: () => -(totalWidth - window.innerWidth),\n          ease: 'none',\n          scrollTrigger: {\n            trigger: historyContainer,\n            pin: true,\n            scrub: 1.5,\n            snap: {\n              snapTo: (progress) => {\n                let sectionOffsets = sections.map(\n                  (s) => s.offsetLeft / totalWidth\n                )\n                return gsap.utils.snap(sectionOffsets, progress)\n              },\n              duration: 0.8,\n            },\n            end: `+=${totalWidth - window.innerWidth}`,\n          },\n        })\n      }\n\n      const progressContainer = progressRef.current\n      if (progressContainer) {\n        let lastIndex = -1\n\n        gsap.to(\n          {},\n          {\n            scrollTrigger: {\n              trigger: progressContainer,\n              start: 'top top',\n              end: `+=${totalSteps * window.innerHeight}px`,\n              scrub: 3,\n              pin: true,\n              pinSpacing: true,\n              snap: {\n                snapTo: (progress) => {\n                  return gsap.utils.snap(1 / (totalSteps - 1), progress)\n                },\n                duration: 1.2,\n                ease: 'power2.out',\n              },\n              onUpdate: (self) => {\n                const newIndex = Math.round(self.progress * (totalSteps - 1))\n\n                if (newIndex !== lastIndex) {\n                  setActiveIndex(newIndex)\n                  console.log('Active Index Updated:', newIndex)\n                  lastIndex = newIndex\n                }\n              },\n            },\n          }\n        )\n      }\n      if (numbersRef.current) {\n        const targets = numbersRef.current.querySelectorAll(\n          '.animated-number'\n        ) as NodeListOf<HTMLElement>\n\n        const bars = numbersRef.current.querySelectorAll(\n          '.barWrapper .bar'\n        ) as NodeListOf<HTMLElement>\n\n        targets.forEach((el) => {\n          const value = parseFloat(el.dataset.value!) || 0\n          const animationObj = { progress: 0 }\n\n          gsap.to(animationObj, {\n            progress: value,\n            duration: 2,\n            ease: 'power2.out',\n            scrollTrigger: {\n              trigger: numbersRef.current,\n              start: 'top 70%',\n              once: true,\n            },\n            onUpdate: function () {\n              el.textContent =\n                value % 1 === 0\n                  ? Math.round(animationObj.progress).toString()\n                  : animationObj.progress.toFixed(1)\n            },\n            onComplete: function () {\n              el.textContent = value.toString()\n            },\n          })\n        })\n\n        gsap.fromTo(\n          bars,\n          { height: '0%' },\n          {\n            height: (index, target) =>\n              `${parseFloat(target.getAttribute('data-height') || '0')}%`,\n            duration: 1.5,\n            ease: 'power2.out',\n            stagger: 0.2,\n            scrollTrigger: {\n              trigger: numbersRef.current,\n              start: 'top 70%',\n              once: true,\n            },\n          }\n        )\n      }\n\n      setTimeout(() => {\n        ScrollTrigger.refresh()\n      }, 500)\n    })\n\n    return () => ctx.revert()\n  }, [])\n\n  return (\n    <section>\n      <FV />\n      <Message />\n      {/* <History ref={historyRef} />\n      <Progress ref={progressRef} activeIndex={activeIndex} />\n      <Numbers ref={numbersRef} />\n      <FromTheCeo /> */}\n    </section>\n  )\n}\n\nexport default Top\n"],"names":[],"mappings":";;;;AACA;AACA;AAKA;AAEA;AACA;AAVA;;;;;;;AAYA,6IAAA,CAAA,UAAI,CAAC,cAAc,CAAC,qIAAA,CAAA,gBAAa;AAEjC,MAAM,MAAM;IACV,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAyB;IACjD,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAyB;IAClD,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAyB;IAEjD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,aAAa;IAEnB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,wCAAmC;;QAEnC,IAAI;IA8HN,GAAG,EAAE;IAEL,qBACE,8OAAC;;0BACC,8OAAC,qIAAA,CAAA,UAAE;;;;;0BACH,8OAAC,+IAAA,CAAA,UAAO;;;;;;;;;;;AAOd;uCAEe"}},
    {"offset": {"line": 397, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}