{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ps/Desktop/work/corporate10/src/app/components/MV.tsx"],"sourcesContent":["import React from 'react'\nimport '@/styles/mv.css'\n\nconst MV = () => {\n  return <section className=\"mv\">MV</section>\n}\n\nexport default MV\n"],"names":[],"mappings":";;;;;;AAGA,MAAM,KAAK;IACT,qBAAO,6LAAC;QAAQ,WAAU;kBAAK;;;;;;AACjC;KAFM;uCAIS"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file:///Users/ps/Desktop/work/corporate10/src/app/components/message/Message.tsx"],"sourcesContent":["import React from 'react'\nimport Image from 'next/image'\nimport styles from '@/styles/message/message.module.css'\n\nconst Message = () => {\n  return (\n    <section className=\"sec message\">\n      <section className=\"secInner\">\n        <div className=\"titleArea\">\n          <span>since</span>\n          <div className=\"secTitleNum\">\n            <p>2015</p>\n          </div>\n          <h2 className=\"secTitle\">10年間本当に有難うございました。</h2>\n        </div>\n        <div className=\"\">\n          <p>\n            皆さまの夢と共に、未来へ。\n            <br />\n            私たちの始まりは、間借り5坪の小さなオフィスでした。\n            <br />\n            そこから10年――。\n            <br />\n            日本初のIT人材プラットフォーム企業として、\n            <br />\n            独自性ある技術を磨きながら刻んできた年月。\n            <br />\n            それは、夢を追い続けた歴史でもあります。\n            <br />\n            10周年という節目を迎えた今。\n            <br />\n            積み重ねてきた歴史と誇りを胸に、これからも、\n            <br />\n            ビズリンクに関わる全ての方と一緒にたくさんの夢をかなえていきたい。\n          </p>\n        </div>\n      </section>\n    </section>\n  )\n}\n\nexport default Message\n"],"names":[],"mappings":";;;;;AAIA,MAAM,UAAU;IACd,qBACE,6LAAC;QAAQ,WAAU;kBACjB,cAAA,6LAAC;YAAQ,WAAU;;8BACjB,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;sCAAK;;;;;;sCACN,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;0CAAE;;;;;;;;;;;sCAEL,6LAAC;4BAAG,WAAU;sCAAW;;;;;;;;;;;;8BAE3B,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;;4BAAE;0CAED,6LAAC;;;;;4BAAK;0CAEN,6LAAC;;;;;4BAAK;0CAEN,6LAAC;;;;;4BAAK;0CAEN,6LAAC;;;;;4BAAK;0CAEN,6LAAC;;;;;4BAAK;0CAEN,6LAAC;;;;;4BAAK;0CAEN,6LAAC;;;;;4BAAK;0CAEN,6LAAC;;;;;4BAAK;;;;;;;;;;;;;;;;;;;;;;;AAOlB;KAnCM;uCAqCS"}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///Users/ps/Desktop/work/corporate10/src/app/Top.tsx"],"sourcesContent":["'use client'\nimport React, { useEffect, useRef, useState } from 'react'\nimport MV from './components/MV'\nimport History from './components/history/History'\nimport Progress from './components/progress/Progress'\n\nimport gsap from 'gsap'\nimport { ScrollTrigger } from 'gsap/ScrollTrigger'\nimport Numbers from './components/numbers/Numbers'\nimport FromTheCeo from './components/fromtheceo/FromTheCeo'\nimport Message from './components/message/Message'\n\ngsap.registerPlugin(ScrollTrigger)\n\nconst Top = () => {\n  const historyRef = useRef<HTMLDivElement | null>(null)\n  const progressRef = useRef<HTMLDivElement | null>(null)\n  const numbersRef = useRef<HTMLDivElement | null>(null)\n\n  const [activeIndex, setActiveIndex] = useState(0)\n  const totalSteps = 8\n\n  useEffect(() => {\n    if (typeof window === 'undefined') return\n\n    let ctx = gsap.context(() => {\n      const historyContainer = historyRef.current\n      if (historyContainer) {\n        let sections = Array.from(\n          historyContainer.querySelectorAll('.panel')\n        ) as HTMLElement[]\n\n        let totalWidth = sections.reduce(\n          (acc, section) => acc + section.getBoundingClientRect().width,\n          0\n        )\n        historyContainer.style.width = `${totalWidth}px`\n\n        gsap.to(historyContainer, {\n          x: () => -(totalWidth - window.innerWidth),\n          ease: 'none',\n          scrollTrigger: {\n            trigger: historyContainer,\n            pin: true,\n            scrub: 1.5,\n            snap: {\n              snapTo: (progress) => {\n                let sectionOffsets = sections.map(\n                  (s) => s.offsetLeft / totalWidth\n                )\n                return gsap.utils.snap(sectionOffsets, progress)\n              },\n              duration: 0.8,\n            },\n            end: `+=${totalWidth - window.innerWidth}`,\n          },\n        })\n      }\n\n      const progressContainer = progressRef.current\n      if (progressContainer) {\n        let lastIndex = -1\n\n        gsap.to(\n          {},\n          {\n            scrollTrigger: {\n              trigger: progressContainer,\n              start: 'top top',\n              end: `+=${totalSteps * window.innerHeight}px`,\n              scrub: 3,\n              pin: true,\n              pinSpacing: true,\n              snap: {\n                snapTo: (progress) => {\n                  return gsap.utils.snap(1 / (totalSteps - 1), progress)\n                },\n                duration: 1.2,\n                ease: 'power2.out',\n              },\n              onUpdate: (self) => {\n                const newIndex = Math.round(self.progress * (totalSteps - 1))\n\n                if (newIndex !== lastIndex) {\n                  setActiveIndex(newIndex)\n                  console.log('Active Index Updated:', newIndex)\n                  lastIndex = newIndex\n                }\n              },\n            },\n          }\n        )\n      }\n      if (numbersRef.current) {\n        const targets = numbersRef.current.querySelectorAll(\n          '.animated-number'\n        ) as NodeListOf<HTMLElement>\n\n        const bars = numbersRef.current.querySelectorAll(\n          '.barWrapper .bar'\n        ) as NodeListOf<HTMLElement>\n\n        targets.forEach((el) => {\n          const value = parseFloat(el.dataset.value!) || 0\n          const animationObj = { progress: 0 }\n\n          gsap.to(animationObj, {\n            progress: value,\n            duration: 2,\n            ease: 'power2.out',\n            scrollTrigger: {\n              trigger: numbersRef.current,\n              start: 'top 70%',\n              once: true,\n            },\n            onUpdate: function () {\n              el.textContent =\n                value % 1 === 0\n                  ? Math.round(animationObj.progress).toString()\n                  : animationObj.progress.toFixed(1)\n            },\n            onComplete: function () {\n              el.textContent = value.toString()\n            },\n          })\n        })\n\n        gsap.fromTo(\n          bars,\n          { height: '0%' },\n          {\n            height: (index, target) =>\n              `${parseFloat(target.getAttribute('data-height') || '0')}%`,\n            duration: 1.5,\n            ease: 'power2.out',\n            stagger: 0.2,\n            scrollTrigger: {\n              trigger: numbersRef.current,\n              start: 'top 70%',\n              once: true,\n            },\n          }\n        )\n      }\n\n      setTimeout(() => {\n        ScrollTrigger.refresh()\n      }, 500)\n    })\n\n    return () => ctx.revert()\n  }, [])\n\n  return (\n    <section>\n      <MV />\n      <Message />\n      {/* <History ref={historyRef} />\n      <Progress ref={progressRef} activeIndex={activeIndex} />\n      <Numbers ref={numbersRef} />\n      <FromTheCeo /> */}\n    </section>\n  )\n}\n\nexport default Top\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}